import java.time.Instant

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
}

android {
    compileSdkVersion 33
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.quranapp.android"
        minSdkVersion 21
        targetSdkVersion 33
        // I don't know why I've used such a weird versioning scheme initially,
        // but I can't change it now as the app is already in the Play Store
        versionCode 23_02_02_001
        versionName "2023.02.02.1"

        resValue "string", "app_name", "QuranApp"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        /* ---------------------------------------------------------------- */

        // Set BuildConfig.DEVELOPER_MACHINE_IP to the IP address of any interface.
        def ipList = getLocalIPv4()
        buildConfigField("String", "DEVELOPER_MACHINE_IP", ipList.empty ? '""' : '"' + ipList.get(0) + '"')
    }

    buildFeatures {
        viewBinding true
    }

    applicationVariants.all { variant ->
        // use the date as version for debug builds
        if (variant.name == 'debug') {
            variant.outputs.each { output ->
                output.versionCodeOverride = Instant.now().getEpochSecond()
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false

            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "app_name", "QuranApp Debug"

            /* ---------------------------------------------------------------- */
            resValue("bool", "FIREBASE_ANALYTICS_DEACTIVATED", "true")
            resValue "string", "cleartextTrafficPermitted", "true"
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            /* ---------------------------------------------------------------- */
            resValue("bool", "FIREBASE_ANALYTICS_DEACTIVATED", "false")
            resValue "string", "cleartextTrafficPermitted", "false"
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.quranapp.android'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    implementation project(path: ':peacedesign')

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation "androidx.webkit:webkit:1.6.0"
    implementation "androidx.media:media:1.6.0"
    implementation 'com.android.databinding:viewbinding:7.4.1'

    // FIREBASE
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.firebase:firebase-inappmessaging-display'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-functions'
//    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.0.0'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-appcheck-debug:16.1.1'

    implementation 'com.google.android.play:core:1.10.3'

    // SmoothRefreshLayout start
    implementation 'com.github.dkzwm:srl-core:1.7.2.4'
    implementation 'com.github.dkzwm:srl-ext-classics:1.7.2.4'
    implementation 'com.github.dkzwm:srl-ext-material:1.7.2.4'
    implementation 'com.github.dkzwm:srl-ext-dynamic-rebound:1.7.2.4'
    implementation 'com.github.dkzwm:srl-ext-horizontal:1.7.2.4'
    implementation 'com.github.dkzwm:srl-ext-two-level:1.7.2.4'
    implementation 'com.github.dkzwm:srl-ext-util:1.7.2.4'
    // SmoothRefreshLayout ends
}


//return all v4 addresses
static def getLocalIPv4() {
    def ip4s = []
    NetworkInterface.getNetworkInterfaces()
            .findAll { it.isUp() && !it.isLoopback() && !it.isVirtual() }
            .each {
                it.getInetAddresses()
                        .findAll { !it.isLoopbackAddress() && it instanceof Inet4Address }
                        .each { ip4s << it.getHostAddress() }
            }
    return ip4s
}